
[![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/github/Corion/Filesys-DB?branch=master&svg=true)](https://ci.appveyor.com/project/Corion/Filesys-DB)
[![Windows](https://github.com/Corion/Filesys-DB/workflows/windows/badge.svg)](https://github.com/Corion/Filesys-DB/actions?query=workflow%3Awindows)
[![MacOS](https://github.com/Corion/Filesys-DB/workflows/macos/badge.svg)](https://github.com/Corion/Filesys-DB/actions?query=workflow%3Amacos)
[![Linux](https://github.com/Corion/Filesys-DB/workflows/linux/badge.svg)](https://github.com/Corion/Filesys-DB/actions?query=workflow%3Alinux)

# NAME

Filesys::DB - store and access filesystem metadata in SQLite

## `->init_config`

    $store->init_config(
        default_config => 'filesys-db.yaml',
        filename       => $filename_from_ARGV,
    );

Looks for a config file and a default config file, and initialize from there

## `->decode_filename $filename_octets`

    my $filename = $store->decode_filename( $octets );

Decodes a filename in the file-system local encoding to Unicode.

## `->to_local`

    my $f = $store->to_local( 'documents', $filename );
    say sprintf "%s is %d bytes", $filename, -s $f;

Return a local filename, as octets. You can perform
file operations on the result string.

## `->integrity_check`

    my $problems = $fs->integrity_check()->fetchall_arrayref({});
    for my $entry (@$problems) {
        say "$entry->{filename} ($entry->{entry_id}): $entry->{reason}";
    }

Run some integrity checks on the database.
